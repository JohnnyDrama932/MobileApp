{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Settings from \"../constants/Settings\";\nimport { RoiDeletePerson, RoiGetPerson } from \"../utils/RoiApi\";\nimport { PopupOk, PopupOkCancel } from \"../utils/Popup\";\nimport { TextParagraph, TextH1, TextH2, TextLabel } from \"../components/StyledText\";\nimport Styles from \"../styles/MainStyle\";\nimport { MyButton } from \"../components/MyButton\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ViewPersonScreen(props) {\n  var _person$phone;\n  var personTemplate = {\n    id: 0,\n    name: '',\n    phone: '',\n    departmentId: null,\n    street: '',\n    city: '',\n    state: '',\n    zip: '',\n    country: '',\n    department: null\n  };\n  var _React$useState = React.useState(personTemplate),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    person = _React$useState2[0],\n    setPerson = _React$useState2[1];\n  React.useEffect(refreshPerson, []);\n  function refreshPerson() {\n    var id = props.route.params.id;\n    RoiGetPerson(id).then(function (data) {\n      if (data) setPerson(data);\n    }).catch(function (error) {\n      PopupOk('API Error', 'Could not get person from the server');\n      props.navigation.navigate('ViewPeople');\n    });\n  }\n  function showEditPerson() {\n    props.navigation.navigate(\"EditPerson\", {\n      id: person.id\n    });\n  }\n  function deletePerson() {\n    PopupOkCancel('Delete person?', `Are you sure you want to delete ${person.name}`, function () {\n      RoiDeletePerson(person.id).then(function (data) {\n        PopupOk('Person deleted', `${person.name} has been  deleted`);\n        props.navigation.replace(\"Root\", {\n          screen: \"People\"\n        });\n      }).catch(function (error) {\n        PopupOk('API Error', 'Could not delete person');\n      });\n    }, function () {\n      console.log('Cancel - no delete for you!');\n    });\n  }\n  return _jsx(SafeAreaView, {\n    style: Styles.safeAreaView,\n    children: _jsxs(ScrollView, {\n      style: Styles.container,\n      contentContainerStyle: Styles.contentContainer,\n      children: [_jsxs(TextH1, {\n        style: {\n          marginTop: 0\n        },\n        children: [\"Person: \", person.name]\n      }), _jsxs(View, {\n        style: Styles.form,\n        children: [_jsxs(View, {\n          style: Styles.fieldSet,\n          children: [_jsx(TextParagraph, {\n            style: Styles.legend,\n            children: \"Details\"\n          }), _jsx(TextParagraph, {\n            style: Styles.legend\n          }), _jsxs(View, {\n            style: Styles.formRow,\n            children: [_jsx(TextLabel, {\n              children: \"Department:\"\n            }), _jsx(TextParagraph, {\n              children: person.department ? person.department.name : ''\n            }), _jsx(TextParagraph, {\n              children: (_person$phone = person.phone) != null ? _person$phone : ''\n            })]\n          })]\n        }), _jsxs(View, {\n          style: Styles.fieldSet,\n          children: [_jsx(TextParagraph, {\n            style: Styles.legend,\n            children: \"Address\"\n          }), _jsxs(View, {\n            style: Styles.formRow,\n            children: [_jsx(TextLabel, {\n              children: \"Street:\"\n            }), _jsx(TextParagraph, {\n              children: person.street\n            })]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: [Styles.personButtonContainer, {\n          borderBottomWidth: 0\n        }],\n        children: [_jsx(MyButton, {\n          text: \"Edit\",\n          type: \"major\",\n          size: \"medium\",\n          onPress: showEditPerson\n        }), _jsx(MyButton, {\n          text: \"Delete\",\n          type: \"default\",\n          size: \"medium\",\n          onPress: deletePerson\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","View","ScrollView","SafeAreaView","Settings","RoiDeletePerson","RoiGetPerson","PopupOk","PopupOkCancel","TextParagraph","TextH1","TextH2","TextLabel","Styles","MyButton","jsxs","_jsxs","jsx","_jsx","ViewPersonScreen","props","_person$phone","personTemplate","id","name","phone","departmentId","street","city","state","zip","country","department","_React$useState","useState","_React$useState2","_slicedToArray","person","setPerson","useEffect","refreshPerson","route","params","then","data","catch","error","navigation","navigate","showEditPerson","deletePerson","replace","screen","console","log","style","safeAreaView","children","container","contentContainerStyle","contentContainer","marginTop","form","fieldSet","legend","formRow","personButtonContainer","borderBottomWidth","text","type","size","onPress"],"sources":["C:/project1/MobileApp/screens/ViewPersonScreen.js"],"sourcesContent":["import * as React from 'react';\nimport { View, ScrollView } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\n// Import helper code\nimport Settings from '../constants/Settings';\nimport { RoiDeletePerson, RoiGetPerson } from '../utils/RoiApi';\nimport { PopupOk, PopupOkCancel } from '../utils/Popup';\n\n// Import styling and components\nimport { TextParagraph, TextH1, TextH2, TextLabel } from '../components/StyledText';\nimport Styles from '../styles/MainStyle';\nimport { MyButton } from '../components/MyButton';\n\n\nexport default function ViewPersonScreen(props) {\n  // Set up a default Person object\n  const personTemplate = {\n    id: 0,\n    name: '',\n    phone: '',\n    departmentId: null,\n    street: '',\n    city: '',\n    state: '',\n    zip: '',\n    country: '',\n    department: null,\n  };\n\n  // State - data for this component\n\n  // Store a person in state\n  const [person, setPerson] = React.useState(personTemplate);\n\n  // Set \"effect\" to retrieve and store data - only run on mount/unmount (loaded/unloaded)\n  // \"effectful\" code is something that triggers a UI re-render\n  React.useEffect(refreshPerson, []);\n\n  // Refresh the person data - call the API\n  function refreshPerson() {\n    // Get person ID passed to this screen (via props)\n    const id = props.route.params.id;\n\n\n    // Get data from the API\n    RoiGetPerson(id)\n      // Success\n      .then((data) => {\n        // Store results in state variable (if data returned)\n        if (data) setPerson(data);\n      })\n      // Error\n      .catch((error) => {\n        // Display error\n        PopupOk('API Error', 'Could not get person from the server');\n        // OPTIONAL: navigate back to ViewPeople screen\n        props.navigation.navigate('ViewPeople');\n      });\n  }\n\n  function showEditPerson() {\n    props.navigation.navigate(\"EditPerson\", { id: person.id });\n  }\n\n  /**\n   * Delete a person from the database\n   */\n  function deletePerson() {\n\n    // Check if person should be deleted (confirm with user)\n    PopupOkCancel(\n\n      // Title and message\n      'Delete person?',\n      `Are you sure you want to delete ${person.name}`,\n\n      // 0K - delete the person\n      () => {\n\n        // Delete the person using the API\n        RoiDeletePerson(person.id)\n          .then((data) => {\n            // Show confirmation that the person has been deleted\n            PopupOk('Person deleted', `${person.name} has been  deleted`);\n\n            // Go back to the person list (ViewPeople)\n            // props.navigation.navigate(\"ViewPeople\");\n            props.navigation.replace(\"Root\", { screen: \"People\" });\n          })\n          .catch((error) => {\n            // Display error\n            PopupOk('API Error', 'Could not delete person');\n          });\n        // console.log('Ok.. deleting person');\n      },\n      // Cancel do nothing\n      () => {\n        console.log('Cancel - no delete for you!');\n      }\n    );\n  }\n\n  // Main output of the screen component\n  return (\n    <SafeAreaView style={Styles.safeAreaView}>\n      <ScrollView style={Styles.container} contentContainerStyle={Styles.contentContainer}>\n        <TextH1 style={{ marginTop: 0 }}>Person: {person.name}</TextH1>\n\n        <View style={Styles.form}>\n          <View style={Styles.fieldSet}>\n            <TextParagraph style={Styles.legend}>Details</TextParagraph>\n\n            <TextParagraph style={Styles.legend}></TextParagraph>\n\n            <View style={Styles.formRow}>\n              <TextLabel>Department:</TextLabel>\n              <TextParagraph>{person.department ? person.department.name : ''}</TextParagraph>\n              <TextParagraph>{person.phone ?? ''}</TextParagraph>\n            </View>\n          </View>\n\n          <View style={Styles.fieldSet}>\n            <TextParagraph style={Styles.legend}>Address</TextParagraph>\n\n            <View style={Styles.formRow}>\n              <TextLabel>Street:</TextLabel>\n              <TextParagraph>{person.street}</TextParagraph>\n            </View>\n\n            {/* Add City, State, Zip, Country here */}\n          </View>\n        </View>\n\n        <View style={[Styles.personButtonContainer, { borderBottomWidth: 0 }]}>\n          <MyButton\n            text=\"Edit\"\n            type=\"major\" // default*|major|minor\n            size=\"medium\" // small|medium*|large\n            onPress={showEditPerson}\n          />\n          <MyButton\n            text=\"Delete\"\n            type=\"default\" // default*|major|minor\n            size=\"medium\" // small|medium*|large\n            onPress={deletePerson}\n          />\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}