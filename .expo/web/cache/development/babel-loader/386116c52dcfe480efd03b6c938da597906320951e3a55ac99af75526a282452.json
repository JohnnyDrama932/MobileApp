{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { imageIndex } from \"../constants/images.js\";\nimport * as React from 'react';\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport Settings from \"../constants/Settings\";\nimport Styles from \"../styles/MainStyle\";\nimport { MyButton } from \"../components/MyButton\";\nimport { TextH1, TextParagraph } from \"../components/StyledText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen(props) {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLogoColor = _React$useState2[0],\n    setIsLogoColor = _React$useState2[1];\n  function toggleLogo() {\n    setIsLogoColor(!isLogoColor);\n  }\n  function showViewPeople() {\n    props.navigation.replace('Root', {\n      screen: 'People'\n    });\n  }\n  function showHelp() {\n    props.navigation.replace('Root', {\n      screen: 'Help'\n    });\n  }\n  return _jsx(SafeAreaView, {\n    style: Styles.safeAreaView,\n    children: _jsxs(ScrollView, {\n      style: Styles.container,\n      contentContainerStyle: Styles.contentContainer,\n      children: [_jsx(View, {\n        style: Styles.homeLogoContainer,\n        children: _jsx(Pressable, {\n          onPress: toggleLogo,\n          children: _jsx(Image, {\n            source: imageIndex[isLogoColor ? 'logo' : 'mono'],\n            style: Styles.homeLogo\n          })\n        })\n      }), _jsx(View, {\n        style: Styles.homeHeadingContainer,\n        children: _jsx(Text, {\n          style: Styles.homeHeading,\n          children: \"ROI HR Management System\"\n        })\n      }), _jsxs(View, {\n        style: Styles.homeButtonContainer,\n        children: [_jsx(MyButton, {\n          text: \"View people\",\n          type: \"major\",\n          size: \"large\",\n          onPress: showViewPeople,\n          buttonStyle: Styles.homeButton\n        }), _jsx(MyButton, {\n          text: \"Show help screen\",\n          type: \"default\",\n          size: \"large\",\n          onPress: showHelp,\n          buttonStyle: Styles.homeButton\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginTop: 20\n        },\n        children: [_jsx(Text, {\n          style: {\n            color: 'lightgray',\n            fontSize: 14\n          },\n          children: \"Developed by\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 18\n          },\n          children: \"John Smith\"\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["imageIndex","React","SafeAreaView","Settings","Styles","MyButton","TextH1","TextParagraph","jsx","_jsx","jsxs","_jsxs","HomeScreen","props","_React$useState","useState","_React$useState2","_slicedToArray","isLogoColor","setIsLogoColor","toggleLogo","showViewPeople","navigation","replace","screen","showHelp","style","safeAreaView","children","ScrollView","container","contentContainerStyle","contentContainer","View","homeLogoContainer","Pressable","onPress","Image","source","homeLogo","homeHeadingContainer","Text","homeHeading","homeButtonContainer","text","type","size","buttonStyle","homeButton","flexDirection","justifyContent","alignItems","marginTop","color","fontSize"],"sources":["C:/project1/MobileApp/screens/HomeScreen.js"],"sourcesContent":["import { Image, Pressable } from 'react-native';\nimport { imageIndex } from '../constants/images.js';\nimport * as React from 'react';\nimport { SafeAreaView } from \"react-native-safe-area-context\";\n\n\n\n// Import helper code\nimport Settings from '../constants/Settings';\n\n// Import styling and components\nimport Styles from \"../styles/MainStyle\";\nimport { MyButton } from '../components/MyButton';\nimport { TextH1, TextParagraph } from \"../components/StyledText\";\n\n\nexport default function HomeScreen(props) {\n\n\n\n  const [isLogoColor, setIsLogoColor] = React.useState(true);\n\n  function toggleLogo() {\n    setIsLogoColor(!isLogoColor);\n  }\n\n  function showViewPeople() {\n    props.navigation.replace('Root', { screen: 'People' });\n  }\n\n  function showHelp() {\n    props.navigation.replace('Root', { screen: 'Help' });\n  }\n\n  return (\n    <SafeAreaView style={Styles.safeAreaView}>\n      <ScrollView style={Styles.container} contentContainerStyle={Styles.contentContainer}>\n        <View style={Styles.homeLogoContainer}>\n          <Pressable onPress={toggleLogo}>\n            <Image source={imageIndex[isLogoColor ? 'logo' : 'mono']} style={Styles.homeLogo} />\n          </Pressable>\n        </View>\n\n        {/* <MyImage index=\"logo\" /> */}\n\n        <View style={Styles.homeHeadingContainer}>\n          <Text style={Styles.homeHeading}>ROI HR Management System</Text>\n        </View>\n\n        <View style={Styles.homeButtonContainer}>\n          <MyButton\n            text=\"View people\"\n            type=\"major\" // default*|major|minor\n            size=\"large\" // small|medium*|large\n            onPress={showViewPeople}\n            buttonStyle={Styles.homeButton}\n          />\n          <MyButton\n            text=\"Show help screen\"\n            type=\"default\" // default*|major|minor\n            size=\"large\" // small|medium*|large\n            onPress={showHelp}\n            buttonStyle={Styles.homeButton}\n          />\n        </View>\n        <View style={{ flexDirection: 'column', justifyContent: 'center', alignItems: 'center', marginTop: 20 }}>\n  <Text style={{ color: 'lightgray', fontSize: 14 }}>Developed by</Text>\n  <Text style={{ fontSize: 18 }}>John Smith</Text>\n</View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}